#include <bits/stdc++.h>
using namespace std;
# define NO_OF_CHARS 256
 
// Алгоритм поиска Бойера-Мура
// эвристика плохого характера
void badCharHeuristic( string str, int size,
                        int badchar[NO_OF_CHARS])
{
    int i;
 
    // Инициализировать все вхождения как -1
    for (i = 0; i < NO_OF_CHARS; i++)
        badchar[i] = -1;
 
    // Заполните фактическое значение последнего появления символа
    for (i = 0; i < size; i++)
        badchar[(int) str[i]] = i;
}
 
/* Функция поиска по шаблону, использующая "плохую"
эвристику характера алгоритма Бойера Мура */
void search( string txt, string pat)
{
    int m = pat.size();
    int n = txt.size();
 
    int badchar[NO_OF_CHARS];
 
    /* Заполните массив плохих символов, вызвав
     функцию предварительной обработки badCharHeuristic()
     для данного шаблона */
    badCharHeuristic(pat, m, badchar);
 
    int s = 0; // s — смещение шаблона относительно текста

    while(s <= (n - m))
    {
        int j = m - 1;
 
        /* Продолжайте уменьшать индекс j шаблона, 
        пока символы шаблона и текста совпадают в этом смещении s */
        while(j >= 0 && pat[j] == txt[s + j])
            j--;
 
        /* Если шаблон присутствует в текущей смене, то индекс j 
        станет равным -1 после цикла, описанного выше. */
        if (j < 0)
        {
            cout << "pattern occurs at shift = " <<  s << endl;
 
            /* Сдвиньте шаблон так, чтобы следующий символ 
            в тексте совпадал с последним его вхождением в шаблон. 
            Условие s+m < n необходимо для случая, когда шаблон 
            встречается в конце текста */
            s += (s + m < n)? m-badchar[txt[s + m]] : 1;
 
        }
 
        else
            /* Сдвиньте шаблон так, чтобы плохой 
            символ в тексте совпадал с последним его 
            вхождением в шаблон. Функция max используется, 
            чтобы убедиться, что мы получаем положительный 
            сдвиг. Мы можем получить отрицательный сдвиг, 
            если последнее появление плохого символа в шаблоне
             находится справа от текущего символа.*/
            s += max(1, j - badchar[txt[s + j]]);
    }
}
 
//Исполнение
int main()
{
    string txt= "ABAAABCD";
    string pat = "ABC";
    search(txt, pat);
    return 0;
}
  
